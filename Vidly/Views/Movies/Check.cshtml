@model Vidly.ViewModels.CreateMovieViewModel

@{
    ViewBag.Title = "Check";
    ViewBag.MoreStuff = "We can add more stuff here too";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@* now we can use model.Movie.Name or model.Customer etc. *@

<h2>@Model.Movie.Name</h2>

<h5>Author: @Model.Movie.Author</h5>

<form asp-controller="Movies" asp-action="Check" class="form-inline mbm" method="post">
    <p>calculate the answer to the Ultimate Question of Life, the Universe, and Everything...</p>
    <div class="form-group">
        <input class="form-control" name="passMe" />
        <input class="btn btn-primary" type="submit" value="Calculate" />
    </div>
</form>


@* passing via the viewmodel displayed here *@
<h2>Using ViewModels</h2>

@* either or I guess, easier and cleaner to set a local string for repeat use then having to use the full m.m.us *@
@{ string quotePassed = Model.Movie.UserString; }
@* Model.Movie.CountTotal(Model.Movie.UserString); *@


<p>Count Total: @Model.Movie.CountTotal(quotePassed)</p>
<p>Unique Words: @Model.Movie.WordsUnique(quotePassed)</p>


<p>Unique Count Each</p>
@* dictionary to hold countunique and iterate in foreach *@
@{ Dictionary<string, int> myDictionary = Model.Movie.CountUnique(quotePassed); }
<ul>
    @foreach (var subItem in myDictionary)
    {
        <li>
            @subItem.Key
            @subItem.Value
        </li>
    }
</ul>


@* using viewbag here with count and words unique *@
<h2>Using ViewBag</h2>
<p>ViewBag Count: @ViewBag.myC</p>
<p>viewBag Words unique: @ViewBag.myWU</p>

